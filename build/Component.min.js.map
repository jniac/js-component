{"version":3,"file":"Component.min.js","sources":["../src/utils.js","../src/method.js","../src/lifecycle.js","../src/Component.js"],"sourcesContent":["\nconst readonly = (target, props, { enumerable = true, configurable = true } = {}) => {\n\n    for (let [key, value] of Object.entries(props)) {\n\n        Object.defineProperty(target, key, { value, enumerable, configurable })\n\n    }\n\n    return target\n\n}\n\nconst getter = (target, props, { enumerable = true, configurable = true } = {}) => {\n\n    for (let [key, get] of Object.entries(props)) {\n\n        Object.defineProperty(target, key, { get, enumerable, configurable })\n\n    }\n\n}\n\nconst getLineage = (target, descending = true) => {\n\n    let array = [target]\n\n    while(target = target.parent)\n        descending ? array.unshift(target) : array.push(target)\n\n    return array\n\n}\n\n\nfunction Average({ length = 10, value = 0 } = {}) {\n\n    let array = new Array(length)\n\n    for (let i = 0; i < length; i++)\n\t\tarray[i] = value\n\n    let index = 0\n\n    let sum = value * length, average = value\n\n    let next = number => {\n\n        sum += number - array[index]\n\t\tarray[index] = number\n\t\taverage = sum / length\n\n\t\tindex++\n\n        if (index === length)\n            index = 0\n\n\t\treturn average\n\n    }\n\n\treturn {\n\n\t\tnext,\n\t\tget array() { return [...array] },\n\t\tget index() { return index },\n\t\tget sum() { return sum },\n\t\tget average() { return average },\n\n    }\n\n}\n\nexport {\n\n    readonly,\n    getter,\n    getLineage,\n    Average,\n\n}\n","\nimport { getLineage } from './utils.js'\n\nexport const isMethodDefinition = (method) => {\n\n    if (typeof method === 'function')\n        return true\n\n    if (typeof method === 'object' && 'method' in method)\n        return true\n\n    return false\n\n}\n\nexport const getPrototypeMethod = (type, key) => {\n\n    let array = []\n\n    let reverse = false\n\n    for (let currentType of getLineage(type)) {\n\n        if (key in currentType.methods) {\n\n            let currentMethod = currentType.methods[key]\n\n            let {\n\n                final = false,\n                override = false,\n\n            } = currentMethod\n\n            if (array.length === 0 && 'reverse' in currentMethod)\n                reverse = currentMethod.reverse\n\n            if (override)\n                array = []\n\n            array.push(typeof currentMethod === 'function' ? currentMethod : currentMethod.method)\n\n            if (final)\n                break\n\n        }\n\n    }\n\n    // single\n\n    if (array.length === 1) {\n\n        let [method] = array\n\n        return function(...args) {\n\n            if (this.destroyed)\n                return this\n\n            let result = method.apply(this, args)\n\n            // return {this} by default, for chaining\n            return result === undefined ? this : result\n\n        }\n\n    }\n\n    // multiple\n\n    if (reverse)\n        array.reverse()\n\n    return function (...args) {\n\n        if (this.destroyed)\n            return this\n\n        let result\n\n        for (let method of array) {\n\n            let currentResult = method.apply(this, args)\n\n            if (currentResult !== undefined)\n                result = currentResult\n\n        }\n\n        // return {this} by default, for chaining\n        return result === undefined ? this : result\n\n    }\n\n}\n","\nimport { readonly, getLineage, Average } from './utils.js'\n\nlet instances = new Set()\n\nlet counter = 0\nlet frame = 0\n\nconst newInstance = (instance, args) => {\n\n    readonly(instance, { uid:counter++ })\n\n    for(let type of getLineage(instance.type)) {\n\n        type.constructor.apply(instance, args)\n\n    }\n\n    instance.dirty = true\n    instance.start(...args)\n\n    instances.add(instance)\n\n}\n\nconst destroyInstance = (instance) => {\n\n    instances.delete(instance)\n\n}\n\nlet lateUpdateSet = new Set()           // instances inside\nlet postUpdateSet = new Set()           // callbacks inside\n\nconst postUpdate = callback => postUpdateSet.add(callback)\n\nlet currentUpdateComponent\nconst isLocked = instance => currentUpdateComponent === instance\n\nlet frameAverage = new Average({ length:60 })\n\nconst frameUpdate = () => {\n\n    let t = performance.now()\n\n    requestAnimationFrame(frameUpdate)\n\n\n\n    // UPDATE\n    for (let instance of instances) {\n\n        if (instance.dirty) {\n\n            currentUpdateComponent = instance\n\n            instance.dirty = instance.update() === true\n\n            lateUpdateSet.add(instance)\n\n        }\n\n    }\n\n    currentUpdateComponent = null\n\n    for (let callback of postUpdateSet)\n        callback()\n\n    postUpdateSet.clear()\n\n    // LATE UPDATE\n    for (let instance of lateUpdateSet) {\n\n        instance.lateUpdate()\n\n    }\n\n    lateUpdateSet.clear()\n\n\n\n    frameAverage.next(performance.now() - t)\n\n    frame++\n\n}\n\nframeUpdate()\n\nexport {\n\n    instances,\n    frameAverage,\n\n    frame,\n\n    newInstance,\n    destroyInstance,\n    isLocked,\n    postUpdate,\n\n}\n","\nimport { readonly, getter } from './utils.js'\nimport { isMethodDefinition, getPrototypeMethod } from './method.js'\nimport { instances, frameAverage, frame, newInstance, destroyInstance, isLocked, postUpdate } from './lifecycle.js'\n\n// [name, constructor]\nlet types = {}\nlet typeCounter = 0\n\n// [constructor, type]\nlet typeMap = new Map()\n\nconst newType = (name = 'Component') => {\n\n    if (name in types) {\n\n        let base = name\n        let index = 1\n\n        do {\n\n            name = `${base}_${index++}`\n\n        } while (name in types)\n\n    }\n\n    let type = readonly({}, {\n\n        uid: typeCounter++,\n        name,\n        methods: {},\n\n    })\n\n    types[name] = type\n\n    return { name, type }\n\n}\n\nconst getConstructor = (name) => {\n\n    return new Function('newInstance', 'typeMap', `return function ${name}() {\n\n        newInstance(this, arguments)\n\n        // FIXME: if typeMap.has(this.constructor) === false : the prototype has been produced via classic [class] pattern\n        // console.log(this, typeMap.has(this.constructor))\n        // console.log(Object.getOwnPropertyNames(this.constructor.prototype))\n\n    }`)(newInstance, typeMap)\n\n}\n\nconst getParent = (parent) => {\n\n    if (!parent)\n        return types.Component\n\n    if (typeof parent === 'string')\n        return types[parent]\n\n    if (typeof parent === 'function')\n        return typeMap.get(parent)\n\n    return parent\n\n}\n\nconst getDescription = (description) => {\n\n    if (typeof description === 'string') {\n\n        if (description.includes(':')) {\n\n            let [name, parent] = description.split(/\\s*:\\s*/)\n\n            return { name, extends:parent }\n\n        }\n\n        return { name: description }\n\n    }\n\n    return description || {}\n\n}\n\nconst ComponentDefinition = function (definition) {\n\n    // IMPORTANT: getParent() must ABSOLUTELY be called before newType, otherwise: \"Uncaught TypeError: Cyclic __proto__ value\"\n    let description = getDescription(definition.Component)\n\n    let parent = getParent(description.extends)\n\n    let { name, type } = newType(description.name)\n    let Constructor = getConstructor(name)\n\n    readonly(type, {\n\n        Constructor,\n        parent,\n        definition,\n        constructor: definition.constructor,\n\n    })\n\n    typeMap.set(Constructor, type)\n\n    if (parent)\n        Object.setPrototypeOf(Constructor.prototype, parent.Constructor.prototype)\n\n    readonly(Constructor, { type })\n    readonly(Constructor.prototype, { type })\n\n    for (let key of Object.getOwnPropertyNames(definition)) {\n\n        if (key === 'Component')\n            continue\n\n        if (key === 'constructor')\n            continue\n\n        let property = Object.getOwnPropertyDescriptor(definition, key)\n\n        if ('value' in property) {\n\n            let value = definition[key]\n\n            if (isMethodDefinition(value)) {\n\n                type.methods[key] = value\n\n                Constructor.prototype[key] = getPrototypeMethod(type, key)\n\n            } else {\n\n                Constructor.prototype[key] = value\n\n            }\n\n        } else {\n\n            Object.defineProperty(Constructor.prototype, key, property)\n\n        }\n\n\n    }\n\n    return Constructor\n\n}\n\nconst RootComponent = ComponentDefinition({\n\n    Component: 'Component',\n\n    dirty: false,\n    destroyed: false,\n\n    getIdString() {\n\n        return `${this.type.name}:${this.uid}`\n\n    },\n\n    get idString() {\n\n        return this.getIdString()\n\n    },\n\n    constructor() {\n\n        this.props = {}\n        this.state = {}\n\n    },\n\n    setProps(propsChunk) {\n\n        Object.assign(this.props, propsChunk)\n\n    },\n\n    setState(stateChunk, { compare = true } = {}) {\n\n        if (isLocked(this)) {\n\n            postUpdate(() => this.setState(stateChunk, { compare }))\n\n            return\n\n        }\n\n        let { state } = this\n\n        if (compare) {\n\n            for (let [key, value] of Object.entries(stateChunk)) {\n\n                if (state[key] !== value) {\n\n                    state[key] = value\n                    this.dirty = true\n\n                }\n\n            }\n\n        } else {\n\n            Object.assign(state, stateChunk)\n            this.dirty = true\n\n        }\n\n    },\n\n    forceUpdate() {\n\n        this.dirty = true\n\n    },\n\n    start: {\n\n        method() {},\n\n    },\n\n    destroy: {\n\n        reverse: true,\n        method() {\n\n            this.destroyed = true\n            destroyInstance(this)\n\n        },\n\n    },\n\n    update: {\n\n        method() {}\n\n    },\n\n    lateUpdate: {\n\n        method() {}\n\n    },\n\n})\n\n\n\nreadonly(RootComponent, {\n\n    types,\n    instances,\n    frameAverage,\n    Def: ComponentDefinition,\n\n})\n\ngetter(RootComponent, {\n\n    frame: () => frame,\n\n})\n\nexport default RootComponent\n"],"names":["readonly","target","props","enumerable","configurable","key","value","Object","entries","defineProperty","getter","get","getLineage","descending","array","parent","unshift","push","Average","length","Array","i","index","sum","average","next","number","isMethodDefinition","method","getPrototypeMethod","type","reverse","currentType","methods","currentMethod","final","override","args","destroyed","result","apply","currentResult","instances","Set","counter","frame","newInstance","instance","uid","constructor","dirty","start","add","destroyInstance","delete","lateUpdateSet","postUpdateSet","postUpdate","callback","currentUpdateComponent","isLocked","frameAverage","frameUpdate","t","performance","now","requestAnimationFrame","update","clear","lateUpdate","types","typeCounter","typeMap","Map","newType","name","base","getConstructor","Function","getParent","Component","getDescription","description","includes","split","extends","ComponentDefinition","definition","Constructor","set","setPrototypeOf","prototype","getOwnPropertyNames","property","getOwnPropertyDescriptor","RootComponent","getIdString","idString","state","setProps","propsChunk","assign","setState","stateChunk","compare","forceUpdate","destroy","Def"],"mappings":"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"}